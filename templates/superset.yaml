

apiVersion: v1
kind: ConfigMap
metadata:
  name: superset-cm
data:
  init-superset.sh: |
        #!/bin/sh
        set -e
        export SUPERSET_SECRET_KEY=$(openssl rand -base64 42)
        export TALISMAN_ENABLED=False
        superset fab create-admin --username admin --firstname Admin --lastname Admin --email admin@localhost --password admin
        superset db upgrade
        superset init


---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{.Values.superset.pvName}}
  labels:
    type: superset
spec:
  capacity:
    storage: {{.Values.superset.pvStorage}}
  accessModes:
   - ReadWriteOnce
  hostPath:
    path: /node-path/superset-dump-data
  storageClassName: "local-path"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{.Values.superset.pvcName}}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{.Values.superset.pvcStorage}}
  storageClassName: "local-path"
  selector:
    matchLabels:
      type: superset


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.superset.DepName}}
spec:
  replicas: {{ .Values.superset.replicaCount }}
  selector:  
    matchLabels:
      app: {{.Values.superset.appName}}
  template:
    metadata:
      labels:
        app: {{.Values.superset.appName}}
    spec:
      initContainers:
      - name: init-permissions
        image: apache/superset
        command: ['sh', '-c', 'export SUPERSET_SECRET_KEY=$(openssl rand -base64 42) && cp /init-scripts/init-superset.sh /app/superset_home && sh /app/superset_home/init-superset.sh && cd /app/superset_home && ls -la']
        # securityContext:
        #   runAsUser: 0
        volumeMounts: 
          - name: superset-init-data
            mountPath: /init-scripts
            readOnly: false
          - mountPath: /app/superset_home/
            name: superset-dump-data
            readOnly: false
      containers:
      - name: {{.Values.superset.containerName}}
        image: apache/superset
        command: ['sh', '-c', ' export SUPERSET_SECRET_KEY=$(openssl rand -base64 42) && superset load_examples && superset init && superset run -h 0.0.0.0 -p 8088 ']
        imagePullPolicy: {{ .Values.superset.pullPolicy }}
        ports:
        - containerPort: {{ .Values.superset.servicePort }}
        volumeMounts:
          - mountPath: /app/superset_home/
            name: superset-dump-data
            readOnly: false          
      volumes:
        - name: superset-dump-data
          persistentVolumeClaim:
            claimName: {{.Values.superset.pvcName}}
        - name: superset-init-data
          configMap:
            name: superset-cm


---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.superset.serviceName }}
spec:
  type: {{ .Values.superset.serviceType }}
  selector:
    app: {{ .Values.superset.appName }}
  ports:
    - port: {{ .Values.superset.servicePort }}
      # the same value as the `port` field.
      targetPort: {{ .Values.superset.servicetargetPort }}
      # will allocate a port from a range (default: 30000-32767)
      nodePort: {{ .Values.superset.servicenodePort }}






